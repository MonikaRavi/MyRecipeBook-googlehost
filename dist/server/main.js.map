{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@angular/router/router.d.ts.ÉµEmptyOutletComponent.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.server.module.ts","webpack:///./src/app/auth/Auth-Store/auth.actions.ts","webpack:///./src/app/auth/Auth-Store/auth.reducers.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/signin/signin.component.html","webpack:///./src/app/auth/signin/signin.component.ts","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/header/header.component.html","webpack:///./src/app/core/header/header.component.ts","webpack:///./src/app/core/home/home.component.html","webpack:///./src/app/core/home/home.component.ts","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.html","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.ts","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.html","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-list.component.html","webpack:///./src/app/recipes/recipe-list/recipe-list.component.ts","webpack:///./src/app/recipes/recipe-start/recipe-start.component.html","webpack:///./src/app/recipes/recipe-start/recipe-start.component.ts","webpack:///./src/app/recipes/recipe.model.ts","webpack:///./src/app/recipes/recipe.service.ts","webpack:///./src/app/recipes/recipes-routing.module.ts","webpack:///./src/app/recipes/recipes.component.html","webpack:///./src/app/recipes/recipes.component.ts","webpack:///./src/app/recipes/recipes.module.ts","webpack:///./src/app/shared/auth.intreceptor.ts","webpack:///./src/app/shared/data-storage.service.ts","webpack:///./src/app/shared/dropdown.directive.ts","webpack:///./src/app/shared/ingredient.model.ts","webpack:///./src/app/shared/logging.interceptor.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shopping-list/ngRx-store/shopping-list.actions.ts","webpack:///./src/app/shopping-list/ngRx-store/shopping-list.reducers.ts","webpack:///./src/app/shopping-list/shopping-list-edit/shopping-list-edit.component.html","webpack:///./src/app/shopping-list/shopping-list-edit/shopping-list-edit.component.ts","webpack:///./src/app/shopping-list/shopping-list.component.html","webpack:///./src/app/shopping-list/shopping-list.component.ts","webpack:///./src/app/shopping-list/shopping-list.module.ts","webpack:///./src/main.server.ts","webpack:///external \"@angular/animations\"","webpack:///external \"@angular/animations/browser\"","webpack:///external \"@angular/common\"","webpack:///external \"@angular/common/http\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/http\"","webpack:///external \"@angular/platform-browser\"","webpack:///external \"@angular/platform-browser/animations\"","webpack:///external \"@angular/platform-server\"","webpack:///external \"@angular/router\"","webpack:///external \"@ngrx/store\"","webpack:///external \"@nguniversal/module-map-ngfactory-loader\"","webpack:///external \"firebase\"","webpack:///external \"rxjs\"","webpack:///external \"rxjs/operators\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","<router-outlet></router-outlet>","import { NgModule, Component } from \"@angular/core\";\r\nimport { Routes, RouterModule, PreloadAllModules } from \"@angular/router\";\r\n\r\nimport { ShoppingListComponent } from \"./shopping-list/shopping-list.component\";\r\n\r\nimport { AuthGuardService } from \"./auth/auth-guard.service\";\r\nimport { HomeComponent } from \"./core/home/home.component\";\r\n\r\nconst appRoutes: Routes = [\r\n\r\n    //Other routes in their respective modules\r\n    { path: '', component: HomeComponent },\r\n    { path: 'recipes',loadChildren:'./recipes/recipes.module#RecipesModule'}, //lazy loading\r\n    { path: 'shopping-list', component: ShoppingListComponent, canActivate: [AuthGuardService] },\r\n    {path: '**', redirectTo:'', pathMatch:'full'}\r\n\r\n];\r\n\r\n@NgModule({   // Ng Module takes javascript as object\r\n\r\n    imports: [RouterModule.forRoot(appRoutes,{preloadingStrategy: PreloadAllModules})], // preloads modules which are loaded lazily\r\n    exports: [RouterModule]\r\n\r\n})\r\n\r\nexport class AppRoutingModule {\r\n\r\n\r\n}","<app-header>\n</app-header>\n<div class=\"container\">\n\n    <div class=\"row\">\n\n        <div class=\"col-md-12\">\n\n          <router-outlet></router-outlet>\n        </div>\n\n    </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n\n\n\n  ngOnInit(){    \n\n    //initializing firebase app when Application is initialized\n\n    firebase.initializeApp({\n      apiKey: \"AIzaSyBjs152BPl8vp_i42uxBymmJetecuLaX2o\",\n    authDomain: \"ng-recipes-books.firebaseapp.com\"\n    });\n\n  }\n\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n//import { HttpModule } from '@angular/http';\nimport { HttpClientModule  } from '@angular/common/http'\n\nimport { AppComponent } from './app.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\nimport { ShoppingListModule } from './shopping-list/shopping-list.module';\nimport { AuthModule } from './auth/auth.module';\nimport { CoreModule } from './core/core.module';\nimport { HttpClient } from 'selenium-webdriver/http';\n\nimport {  StoreModule }  from '@ngrx/store'\nimport { reducers } from './AppStore/app.reducer'\nimport {  EffectsModule } from '@ngrx/effects';\n\n\n@NgModule({\n  declarations: [   //components , directives , pipes that the module use ; directives cannot be declared in more than 1 module\n    AppComponent\n\n\n  ],\n  imports: [  // other modules used by the module ; modules can be imported in multiple modules\n    BrowserModule.withServerTransition({appId: 'recipebook-app'}), // contains all features of common module and other modules only needed for app starting\n    //HttpModule,\n    HttpClientModule,\n    ShoppingListModule,\n    AuthModule,\n    SharedModule,\n    CoreModule,\n    AppRoutingModule,\n    StoreModule.forRoot(reducers) // ngRx will setup a store, register the shoppingList reducer and initial state as the one piece of state for the overall application\n  \n  ],\n  //providers in core module\n  bootstrap: [AppComponent]  //root component - starting point of what we see \n})\nexport class AppModule { }\n","import {NgModule} from '@angular/core';\r\nimport {ServerModule} from '@angular/platform-server';\r\nimport {ModuleMapLoaderModule} from '@nguniversal/module-map-ngfactory-loader';\r\n\r\nimport {AppModule} from './app.module';\r\nimport {AppComponent} from './app.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    // The AppServerModule should import your AppModule followed\r\n    // by the ServerModule from @angular/platform-server.\r\n    AppModule,\r\n    ServerModule,\r\n    ModuleMapLoaderModule // <-- *Important* to have lazy-loaded routes work\r\n  ],\r\n  // Since the bootstrapped component is not inherited from your\r\n  // imported AppModule, it needs to be repeated here.\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppServerModule {}","import { Action } from '@ngrx/store'\r\n\r\n\r\n\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNIN = 'SIGNIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const SET_TOKEN = 'SET_TOKEN';\r\n\r\n\r\n\r\nexport class SignUp implements Action {\r\n    readonly type = SIGNUP;\r\n\r\n}\r\n\r\nexport class SignIn implements Action {\r\n    readonly type = SIGNIN;\r\n\r\n}\r\n\r\nexport class LogOut implements Action {\r\n    readonly type = LOGOUT;\r\n\r\n}\r\n\r\nexport class SetToken implements Action {\r\n    readonly type = SET_TOKEN;\r\n\r\n    constructor(public payload: string) {\r\n\r\n    }\r\n\r\n}\r\n\r\nexport type AuthActions = SignIn | SignUp | LogOut | SetToken ;","\r\nimport * as AuthActions from './auth.actions'\r\n\r\nexport interface State {\r\n\r\n    token: string;  //token retrieved from Firebase\r\n    authenticated: boolean;\r\n\r\n}\r\n\r\nconst initialState: State = {   //defining initial state as there will be no initial state when application starts \r\n    token: null,\r\n    authenticated: false\r\n};\r\n\r\nexport function AuthReducers(state = initialState, action: AuthActions.AuthActions) {\r\n\r\n    switch (action.type) {\r\n\r\n        case (AuthActions.SIGNUP):\r\n        return {\r\n            ...state,\r\n            authenticated: false\r\n        };\r\n        case (AuthActions.SIGNIN):\r\n            return {\r\n                ...state,\r\n                authenticated: true\r\n            };\r\n\r\n        case (AuthActions.LOGOUT):\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                authenticated: false\r\n            };\r\ncase (AuthActions.SET_TOKEN):\r\nreturn {\r\n    ...state,\r\n    token: action.payload\r\n}\r\n\r\n    }\r\n\r\n    return state;\r\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRoute, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad } from '@angular/router';\n\nimport { Store } from '@ngrx/store';\n\nimport * as appReducers from '../AppStore/app.reducer';\n\nimport * as authReducer from './Auth-Store/auth.reducers';\n\nimport { map, take } from 'rxjs/operators';\n\n\n@Injectable()\n\nexport class AuthGuardService implements CanActivate {\n\n  \n  constructor(private store: Store<appReducers.AppState>) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\n      return this.store.select('auth').pipe(take(1),\n        map((authState: authReducer.State)=>{\nreturn authState.authenticated; \n      })\n    );\n   \n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\n\r\nconst authRoutes : Routes =[\r\n   \r\n    {path: 'signup' , component: SignupComponent},\r\n    {path: 'signin' , component: SigninComponent}\r\n    \r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(authRoutes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AuthRoutingModule{}","import { NgModule } from \"@angular/core\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AuthRoutingModule } from \"./auth-routing.module\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SigninComponent,\r\n        SignupComponent\r\n    ],\r\n    imports:[\r\n        CommonModule,\r\n        FormsModule,\r\n        AuthRoutingModule\r\n    ]\r\n})\r\n\r\nexport class AuthModule{}","import * as firebase from 'firebase';\nimport { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport * as appReducers from '../AppStore/app.reducer'\n\nimport * as authActions from '../auth/Auth-Store/auth.actions';\n\n@Injectable()\n\nexport class AuthService {\n\n\n    token: string;\n\n    errorMessage = '';\n\n    constructor(private router: Router, private store: Store<appReducers.AppState>) {\n\n\n    }\n\n    signUpUser(email: string, password: string) {\n\n\n\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(\n                response => {\n\n                    this.store.dispatch(new authActions.SignUp()); //logging in using actions\n\n                    this.router.navigate(['/signin']);\n                }\n            )\n            .catch(\n                error => {\n\n                    this.errorMessage = error.message;\n                }\n            )\n\n    }\n\n\n    signInUser(email: string, password: string) {\n\n\n\n        firebase.auth().signInWithEmailAndPassword(email, password)  // waits for a token to get retrieved from server\n            .then(\n                response => {\n                    this.store.dispatch(new authActions.SignIn());\n                    this.router.navigate(['/recipes']);\n                    firebase.auth().currentUser.getIdToken()\n                        .then(\n                            (token: string) => {\n                                this.token = token;\n                                this.store.dispatch(new authActions.SetToken(token));\n                                // console.log(this.token);\n                            }\n                        )\n                }\n            )\n            .catch(\n                error => {\n\n                    //console.log(error.message);\n                    this.errorMessage = error.message;\n                }\n            );\n\n\n    }\n\n    logOut() {\n\n        firebase.auth().signOut();\n        //this.token = null;\n        this.store.dispatch(new authActions.LogOut()); //resets the token and auth state\n        this.router.navigate(['/']);\n\n    }\n\n    getToken() {\n\n        // getIdToken() retruns a promise ; doesnt wait for the token to get retrieved from server ; might return an expired token\n\n        firebase.auth().currentUser.getIdToken()   // async action => firebase not only gets the token from local storage (sync) but also checks if it is valid and if it is invalid becuase it expired, it gets a new token from server (async)\n            .then(\n                (token: string) => {\n                    this.token = token;\n                }\n            );\n\n        return this.token;\n\n\n    }\n\n    // isAuthenticated() {\n    //     //returns true if authenticated\n    //     let checkToken = false;\n    //     this.store.select('auth')\n    //         .subscribe(\n    //             data => {\n    //                 checkToken = data.authenticated;\n    //             }\n    //         )\n\n    //     return checkToken;\n    // }\n\n    getError() {\n\n        return this.errorMessage;\n    }\n\n    deleteUser() {\n\n        firebase.auth().currentUser.delete();\n    }\n\n}","<div class=\"row\">\n  <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\n    <form (ngSubmit)=\"onSignIn(f)\" #f=\"ngForm\">\n      <!-- assigning #f to ngForm to get access to underlying form object created by Angular-->\n      <div class=\"form-group\">\n        <label for=\"email\">Mail</label>\n        <input type=\"email\" name=\"email\" id=\"email\" ngModel class=\"form-control\" required email #email=\"ngModel\">\n        <span class=\"help-block text-warning\" *ngIf=\"!email.valid && email.touched\">Please enter a valid email!</span>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" name=\"password\" id=\"password\" ngModel class=\"form-control\" required minlength=\"6\" #password=\"ngModel\">\n        <span class=\"help-block text-warning\" *ngIf=\"!password.valid && password.touched\"> Password should be atleast 6 characters long </span>\n      </div>\n      <button class=\"btn btn-primary\" type=\"submit\">Sign In</button>\n      <div class=\"text-warning\">\n        {{ error }}\n      </div>\n     \n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { auth } from 'firebase';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n\n\n  error = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n\n    this.authService.errorMessage='';\n\n  }\n\n  onSignIn(form: NgForm){\n\n    const email = form.value.email;\n    const password = form.value.password;\n\n     this.authService.signInUser(email,password);\n\n    setTimeout(() => {\n      this.error = this.authService.getError();\n        }, 1000); \n\n\n      }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\n    <form (ngSubmit)=\"onSignUp(f)\" #f=\"ngForm\">\n      <!-- assigning #f to ngForm to get access to underlying form object created by Angular-->\n      <div class=\"form-group\">\n        <label for=\"email\">Mail</label>\n        <input type=\"email\" name=\"email\" id=\"email\" ngModel class=\"form-control\" required email #email=\"ngModel\">\n        <span class=\"help-block text-warning\" *ngIf=\"!email.valid && email.touched\">Please enter a valid email!</span>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" name=\"password\" id=\"password\" ngModel class=\"form-control\" required minlength=\"6\" #password=\"ngModel\">\n        <span class=\"help-block text-warning\" *ngIf=\"!password.valid && password.touched\"> Password should be atleast 6 characters long </span>\n      </div>\n      <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!f.valid\">Sign Up</button>\n      <div class=\"text-warning\">\n        {{ error }}\n      </div>\n      <hr>\n      <div>Please make sure you \"Delete User\" before logging out!!!</div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Store } from '@ngrx/store';\n\nimport * as appReducers from '../../AppStore/app.reducer';\nimport * as authActions from '../Auth-Store/auth.actions';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  error = '';\n\n  constructor( private authService: AuthService , private store: Store<appReducers.AppState>) { }\n\n  ngOnInit() {\n\n    this.authService.errorMessage='';\n\n  }\n\n\n  onSignUp(form: NgForm){\n\n    const email = form.value.email;\n    const password = form.value.password;\n\n    \nthis.authService.signUpUser(email,password);\n\nsetTimeout(() => {\n  this.error = this.authService.getError();\n    }, 1000); \n\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { HeaderComponent } from \"./header/header.component\";\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { AppRoutingModule } from \"../app-routing.module\";\r\nimport { AuthGuardService } from \"../auth/auth-guard.service\";\r\nimport { RecipeService } from \"../recipes/recipe.service\";\r\nimport { DataStorageService } from \"../shared/data-storage.service\";\r\nimport { AuthService } from \"../auth/auth.service\";\r\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { AuthInterceptor } from \"../shared/auth.intreceptor\";\r\nimport { LoggingInterceptor } from \"../shared/logging.interceptor\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        HeaderComponent,\r\n        HomeComponent\r\n    ],\r\n\r\n    imports: [\r\n        SharedModule,\r\n        CommonModule,\r\n        AppRoutingModule\r\n    ],\r\n\r\n    exports: [\r\n        AppRoutingModule,\r\n        HeaderComponent //coz, using header component in app component html\r\n\r\n    ],\r\n\r\n    providers: [\r\n        RecipeService,\r\n        DataStorageService,\r\n        AuthService,\r\n        AuthGuardService,\r\n        {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true},  //interceptors will handle every request app sends instead of Angular handling it by default\r\n        {provide: HTTP_INTERCEPTORS, useClass: LoggingInterceptor, multi: true}\r\n    ]\r\n})\r\n\r\nexport class CoreModule { }","<!-- The Navigation Bar -->\n\n<nav class=\"navbar navbar-default\">\n\n  <div class=\"container-fluid\">\n\n    <div class=\"navbar-header\">\n\n      <a routerLink=\"/\" class=\"navbar-brand\">Recipe Book</a>\n\n    </div>\n\n    <div class=\"collapse navbar-collapse\"></div>\n\n   <!-- <ul class=\"nav navbar-nav\" *ngIf=\"(authState | async).authenticated\"> -->\n    <ul class=\"nav navbar-nav\" *ngIf=\"(authState | async).authenticated\">\n      <!-- The Main Links -->\n\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"/recipes\">Recipes</a>\n      </li>\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"/shopping-list\">Shopping List</a>\n      </li>\n\n       </ul>\n\n      \n\n    <!-- Other Links to be on far right corner of Page -->\n\n    <ul class=\"nav navbar-nav navbar-right\">\n\n      <ng-template [ngIf]=\"!(authState | async).authenticated\">\n        <li>\n          <a routerLink=\"/signup\">Register</a>\n        </li>\n\n        <li>\n          <a routerLink=\"/signin\">Login</a>\n        </li>\n      </ng-template>\n\n      <ul class=\"nav navbar-nav\" *ngIf=\"(authState | async).authenticated\">\n\n        <li>\n          <a style=\"cursor: pointer;\" (click)=\"onLogOut()\" >Logout</a>\n        </li>\n  \n        <li>\n          <a style=\"cursor: pointer;\" (click)=\"onDeleteUser()\">Delete User</a>\n        </li>\n\n\n      </ul>\n\n     \n\n      <li class=\" dropdown \" appDropDown *ngIf=\"(authState | async).authenticated\" >\n\n        <!-- Line To access dropdown - Span Caret adds a downward arrow next to Link to indicate a dropdown -->\n        <a style=\"cursor: pointer; \" class=\"dropdown-toggle \" role=\"button \">Manage\n          <span class=\"caret \"></span>\n        </a>\n\n        <ul class=\"dropdown-menu \">\n\n          <li>\n            <a style=\"cursor: pointer; \" (click)=\"onSaveData() \">Save Data</a>\n          </li>\n          <li>\n            <a style=\"cursor: pointer; \" (click)=\"onFetchData() \">Fetch Data</a>\n          </li>\n\n        </ul>\n\n      </li>\n\n    </ul>\n\n  </div>\n\n\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { DataStorageService } from '../../shared/data-storage.service';\nimport { Response } from '@angular/http';\nimport { AuthService } from '../../auth/auth.service';\nimport { HttpEvent} from '@angular/common/http';\nimport { Store } from '@ngrx/store';\n\nimport * as appReducers from '../../AppStore/app.reducer'  \nimport * as authReducers from '../../auth/Auth-Store/auth.reducers'\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit  {\n\n  authState: Observable<authReducers.State> ;\n\n  constructor(private dataStorageService: DataStorageService, private authService: AuthService,\n        private store: Store<appReducers.AppState>) { }\n\n        ngOnInit(){\n\n         this.authState = this.store.select('auth')\n\n        }\n\n  onSaveData(){\n\n    this.dataStorageService.storeRecipes()\n    .subscribe(\n      (response) => { \n        console.log(response) ;\n      }\n    );\n\n    this.dataStorageService.storeList() \n   \n    .subscribe(\n      (response) => { \n        //console.log(response);\n          }\n    );\n\n  }\n  \n  onFetchData(){\n\n    this.dataStorageService.getRecipes();  // no need to subscribe as it is handled in service\n    this.dataStorageService.getShoppingList();\n  }\n\n\n\n  onLogOut(){\n    this.authService.logOut();\n  }\n\n  onDeleteUser(){\n\n    this.authService.deleteUser();\n    this.onLogOut();\n  }\n\n}\n","<h2> Welcome to Recipe Book</h2>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n\n  <div class=\"col-xs-12\">\n\n    <img [src]=\"recipeDetail.imagePath\" alt=\"{{ recipeDetail.name }} \" class=\"img-responsive\" style=\"max-height: 300px\">\n\n  </div>\n\n  <div class=\"row\">\n\n    <div class=\"col-xs-12\">\n\n      <h1>{{ recipeDetail.name }} </h1>\n\n    </div>\n\n  </div>\n\n</div>\n\n<div class=\"row\">\n\n  <div class=\"col-xs-12\">\n\n    <div class=\"btn-group\" appDropDown>\n\n      <button type=\"button\" class=\"btn btn-primary dropdown-toggle\">\n\n        Manage Recipe\n        <span class=\"caret\"></span>\n      </button>\n\n      <ul class=\"dropdown-menu\">\n\n        <li>\n          <a (click)=\"onAddItemToShopping()\"  style=\"cursor: pointer;\">To Shopping List</a>\n        </li>\n        <li>\n          <a style=\"cursor: pointer;\" (click)=\"onEditRecipe()\">Edit Recipe</a>\n        </li>\n        <li>\n          <a style=\"cursor: pointer;\" (click)=\"onDeleteRecipe()\">Delete Recipe</a>\n        </li>\n\n      </ul>\n\n    </div>\n\n  </div>\n\n</div>\n\n<div class=\"row\">\n\n  <div class=\"col-xs-12\">\n\n    {{ recipeDetail.description }}\n\n  </div>\n\n</div>\n\n<div class=\"row\">\n\n  <div class=\"col-xs-12\">\n\n    <ul class=\"list-group\">\n\n      <li class=\"list-group-item\" *ngFor=\"let ingredient of recipeDetail.ingredients\">\n        {{ ingredient.name}} - {{ ingredient.amount}}\n\n      </li>\n    </ul>\n\n  </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\n\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\n\nimport * as ShoppingListActions from '../../shopping-list/ngRx-store/shopping-list.actions'\n\nimport * as ShoppingListReducers from '../../shopping-list/ngRx-store/shopping-list.reducers';\n\nimport * as AppReducers from '../../AppStore/app.reducer'\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n\n\n recipeDetail: Recipe ;\n id: number;\n\n  constructor(private recipeService : RecipeService, private route: ActivatedRoute, private router: Router,\n      private store: Store<AppReducers.AppState>) { }\n\n  ngOnInit() {\n\n    this.route.params.subscribe(\n\n      (para: Params) => {\n\n        this.id = +para['id'];\n        this.recipeDetail = this.recipeService.getRecipe(this.id);\n      }\n      \n    );\n\n  }\n\n  onAddItemToShopping(){\n\n//this.recipeService.addIngredientstoShoppingList(this.recipeDetail.ingredients);\n\n    this.store.dispatch(new ShoppingListActions.AddIngredients(this.recipeDetail.ingredients));\n\n  }\n\n\n  onEditRecipe(){\n\n    this.router.navigate(['edit'], {relativeTo: this.route}); // we don't need id here because the id will already be in the URL - using relative path\n\n    // Alternate way\n\n  //  this.router.navigate(['../', this.id,'edit'], {relativeTo: this.route}); \n\n    // cobnstruncting complex path -> moving one step upwards, adding ID , edit to the URL\n\n  }\n\n  onDeleteRecipe(){\n    this.recipeService.deleteRecipe(this.id);\n    this.router.navigate(['/recipes']);\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\n      <!-- Property Binding -->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <!-- Save Or Cancel saving a recipe-->\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!recipeForm.valid\">Save</button> &nbsp;\n          <button type=\"submit\" class=\"btn btn-danger\" (click)=\"onCancel()\">Cancel</button>\n        </div>\n      </div>\n      <!-- Recipe Name input Text field-->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\">\n          </div>\n        </div>\n      </div>\n      <!-- Recipe Image URL input Text field-->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"imagePath\">Image URL</label>\n            <input type=\"text\" id=\"imagePath\" class=\"form-control\" formControlName=\"imagePath\" #imagePathref>\n          </div>\n        </div>\n      </div>\n      <!-- Image Preview field - not an input-->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <img [src]=\"imagePathref.value\" class=\"img-responsive\">\n        </div>\n      </div>\n      <!-- Recipe Description input Text field-->\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"description\">Description</label>\n            <textarea type=\"text\" id=\"description\" class=\"form-control\" rows=\"6\" formControlName=\"description\"></textarea>\n          </div>\n        </div>\n      </div>\n      <!-- Single row to add Ingredient-->\n      <div class=\"row\">\n        <div class=\"col-xs-12\" formArrayName=\"ingredients\">\n          <!-- ingredients is the form array name in recipe form definition-->\n          <!-- Iterating through all the ingredients - array-->\n          <div class=\"row\" *ngFor=\"let ingredientControl of getControls() ; let i = index\" [formGroupName]=\"i\"\n            style=\"margin-top: 10px\">\n            <!--No form group name is defined => hence using the index as name-->\n            <!-- Ingredient Name input field-->\n            <div class=\"col-xs-8\">\n              <input type=\"text\" class=\"form-control\" formControlName=\"name\">\n            </div>\n            <!-- Ingredient amount input field-->\n            <div class=\"col-xs-2\">\n              <input type=\"number\" class=\"form-control\" formControlName=\"amount\">\n            </div>\n            <!-- cancel the addition of ingredient-->\n            <div class=\"col-xs-2\">\n              <button type=\"button\" class=\"btn btn-danger\" (click)=\"onDeleteIngredient(i)\">X</button>\n            </div>\n          </div>\n          <hr>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"onAddIngredient()\"> Add Ingredient </button>\n  </div>\n</div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, FormControlDirective, Validators } from '@angular/forms';\nimport { RecipeService } from '../recipe.service';\n\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\n\n\n  id: number;\n  editMode = false;\n\n  recipeForm: FormGroup;\n\n  constructor(private route: ActivatedRoute, private recipeService: RecipeService, private router: Router) { }\n\n  ngOnInit() {\n\n    this.route.params.subscribe(\n\n      (para: Params) => {\n\n        this.id = +para['id'];\n        this.editMode = para['id'] != null;  // true when edit and false for new\n        this.initForm();\n\n      }\n\n    );\n\n\n  }\n\n  onSubmit() {\n\n    // option 1 - creating a recipe object and then passing it\n\n    /* const newRecipe = new Recipe(this.recipeForm.value['name'],\n      this.recipeForm.value['description'],\n      this.recipeForm.value['imagePath'],\n      this.recipeForm.value['ingredients']);\n\n    if (this.editMode) {\n      this.recipeService.updateRecipe(this.id, newRecipe);\n    } else\n\n    this.recipeService.addRecipe(newRecipe);\n*/\n\n    //option 2 - since the form has the same structure and control names as the reicpe model , we can directly use the form value \n\n    if (this.editMode) {\n      this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n    } else\n\n      this.recipeService.addRecipe(this.recipeForm.value);\n this.onCancel(); // take us one step back from the current page\n  }\n\n  onAddIngredient() {\n\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        'name': new FormControl(null, Validators.required),\n        'amount': new FormControl(null, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n      })\n    );\n  }\n\n  onDeleteIngredient(index: number){\n\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);  // removes the ingredient\n  }\n\n  onCancel(){\nthis.router.navigate(['../'], {relativeTo: this.route}) // takes us one step back \n  }\n\n  \n  getControls() {\n    return (<FormArray>this.recipeForm.get('ingredients')).controls;\n  }\n\n  private initForm() {  // form definition / configuration \n\n    let recipeName = '';\n    let recipeImagePath = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray([]); // form array initialized with empty array\n    // If in edit mode, pull the existing recipe information - if not just a blank form => for adding new recipe\n    if (this.editMode) {\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName = recipe.name;\n      recipeImagePath = recipe.imagePath;\n      recipeDescription = recipe.description;\n      if (recipe['ingredients']) {\n        for (let ingredient of recipe.ingredients) {\n          recipeIngredients.push(new FormGroup({   // form group because we have 2 elements that define ingredients - name and amount\n            'name': new FormControl(ingredient.name, Validators.required),\n            'amount': new FormControl(ingredient.amount, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])  //accept amount only > 0\n          })\n          );\n        }\n      }\n    }\n\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName, Validators.required),\n      'imagePath': new FormControl(recipeImagePath, Validators.required),\n      'description': new FormControl(recipeDescription, Validators.required),\n      'ingredients': recipeIngredients\n    });\n  }\n\n\n\n}\n","<a  style=\"cursor: pointer\" class=\"list-group-item clearfix\" [routerLink]=\"[index]\" routerLinkActive=\"active\">\n    <div class=\"pull-left\">\n\n        <h4 class=\"list-group-item-heading\">{{ recipe.name }}</h4>\n        <p class=\"list-group-item-text\">{{ recipe.description }}</p>\n\n    </div>\n\n    <span class=\"pull-right\">\n\n        <img [src]=\"recipe.imagePath\" \n        alt=\"{{ recipe.name }}\" \n        class=\"img-responsive\" \n        style=\"max-height:50px;\">\n\n    </span>\n\n</a>","import { Component, OnInit, Input } from '@angular/core';\nimport { Recipe } from '../../recipe.model';\n\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n\n\n @Input('recipeProp') recipe: Recipe;\n\n @Input() index: number;\n\n\n  ngOnInit() {\n  }\n\n\n}\n","<div class=\"row\">\r\n\r\n    <div class=\"col-xs-12\">\r\n\r\n        <button class=\"btn btn-success\" (click)=\"onNewRecipe()\" >New Recipe</button>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<hr>\r\n\r\n<div class=\"row\">\r\n\r\n    <div class=\"col-xs-12\">\r\n\r\n        <!-- display the array starts  -->\r\n\r\n\r\n             <!-- display the array Ends  -->\r\n\r\n\r\n            <app-recipe-item  *ngFor=\"let recipe of recipes ; let i = index\" \r\n             [recipeProp] = \"recipe\" \r\n             [index]=\"i\"\r\n             ></app-recipe-item>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit , OnDestroy{\n\n\n  // making recipes array as type model Recipe\n\n  recipes: Recipe[];\n\nsubscription: Subscription;\n\n\n\n  constructor(private recipeService: RecipeService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this.subscription = this.recipeService.recipesChanged.subscribe(\n      (recipes: Recipe[]) => {\n        this.recipes = recipes;\n\n      })\n    this.recipes = this.recipeService.getRecipes();\n\n  }\n\n\n  onNewRecipe() {\n\n    this.router.navigate(['new'], { relativeTo: this.route });\n\n  }\n\n  ngOnDestroy(){\n\n    this.subscription.unsubscribe();\n\n  }\n\n}\n","<h3> Please select a recipe</h3>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Ingredient } from \"../shared/ingredient.model\";\r\n\r\nexport class Recipe {\r\n\r\npublic name: string;\r\npublic description: string;\r\npublic imagePath: string ;\r\npublic ingredients: Ingredient[];\r\n\r\nconstructor(name: string,description: string, imagePath: string,\r\n                   ingredients: Ingredient[]  )\r\n\r\n{\r\n\r\n this.name = name;\r\n\r\n this.description = description ;\r\n\r\n this.imagePath = imagePath;\r\n \r\n this.ingredients = ingredients;\r\n\r\n}\r\n\r\n\r\n}","import { Recipe } from \"./recipe.model\";\r\nimport { Ingredient } from \"../shared/ingredient.model\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n\r\nexport class RecipeService {\r\n\r\n    recipesChanged = new Subject<Recipe[]>(); // to track changes in the Recipe array - addition or update\r\n\r\n    constructor() {\r\n\r\n\r\n    }\r\n\r\n  \r\n\r\n    private recipes: Recipe[] = [\r\n\r\n        new Recipe('Idli',\r\n            'Healthy Breakfast of rice and lentils',\r\n            'https://i.ndtvimg.com/i/2017-11/oats-idli_620x330_71510224674.jpg',\r\n            [\r\n                new Ingredient('Parboiled Rice',4),\r\n                new Ingredient('Black Gram',1)\r\n            ]),\r\n\r\n        new Recipe('Dosa',\r\n            'Breakfast of rice and less lentils',\r\n            'https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Dosa_and_ghee.jpg/1200px-Dosa_and_ghee.jpg',\r\n            [\r\n                new Ingredient('Raw Rice',1.5),\r\n                new Ingredient('Parboiled Rice',1.5),\r\n                new Ingredient('Black Gram',1) \r\n\r\n            ])\r\n\r\n    ];\r\n\r\n    setRecipes(recipes: Recipe[]) {\r\n\r\n        this.recipes = recipes;\r\n        this.recipesChanged.next(this.recipes.slice());\r\n\r\n    }\r\n\r\n\r\n    getRecipes() {\r\n\r\n        return this.recipes.slice();  //get a copy of array and not the array itself; \r\n        //array is a memory reference object ; will not be updated if there is a change in array\r\n        // Hence Subject is used\r\n\r\n    }\r\n\r\n \r\n\r\n    getRecipe(index: number) {\r\n\r\n        return this.recipes.slice()[index]; //splice returns copy of array\r\n    }\r\n\r\n    addRecipe(recipe: Recipe){\r\n\r\n        this.recipes.push(recipe);\r\n        this.recipesChanged.next(this.recipes.slice()); // emits a new array value after the change\r\n\r\n    }\r\n\r\n    updateRecipe(index: number, newRecipe: Recipe){\r\n\r\n        this.recipes[index] = newRecipe;\r\n        this.recipesChanged.next(this.recipes.slice());\r\n\r\n    }\r\n\r\n    deleteRecipe(index: number){\r\n        this.recipes.splice(index, 1);\r\n        this.recipesChanged.next(this.recipes.slice());\r\n    }\r\n\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { RecipesComponent } from \"./recipes.component\";\r\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { AuthGuardService } from \"../auth/auth-guard.service\";\r\n\r\n\r\nconst recipeRoutes: Routes =[\r\n    {\r\n        path: '', component: RecipesComponent, children: [\r\n            { path: '', component: RecipeStartComponent },\r\n            { path: 'new', component: RecipeEditComponent },\r\n            { path: ':id', component: RecipeDetailComponent },  //id is a parameter used to load routes dynamically\r\n            { path: ':id/edit', component: RecipeEditComponent } //will determine if we are in edit mode or not\r\n        ],\r\n        canActivate: [AuthGuardService]\r\n    },\r\n]\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(recipeRoutes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class RecipesRoutingModule{\r\n\r\n}","<h3>Recipes</h3>\n<div class=\"row\">\n\n<div class=\"col-md-5\">\n\n  <app-recipe-list></app-recipe-list>\n\n</div>\n\n<div class=\"col-md-7\">\n\n   <router-outlet></router-outlet>\n\n</div>\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { RecipeService } from './recipe.service';\n\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n\n\n\n\n  constructor() { }\n\n  ngOnInit() {\n\n   \n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { RecipesComponent } from \"./recipes.component\";\r\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\r\nimport { RecipeListComponent } from \"./recipe-list/recipe-list.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { RecipeItemComponent } from \"./recipe-list/recipe-item/recipe-item.component\";\r\nimport { RecipesRoutingModule } from \"./recipes-routing.module\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations:[\r\n        RecipesComponent,\r\n        RecipeStartComponent,\r\n        RecipeListComponent,\r\n        RecipeEditComponent,\r\n        RecipeDetailComponent,\r\n        RecipeItemComponent\r\n        \r\n    ],\r\n    imports:[\r\n        CommonModule, //mandatory for feature as the probability of using it is very high\r\n        ReactiveFormsModule,\r\n        SharedModule,\r\n        RecipesRoutingModule\r\n    ]\r\n})\r\n\r\n\r\nexport class RecipesModule{\r\n\r\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AuthService } from \"../auth/auth.service\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport * as appReducer from '../AppStore/app.reducer';\r\n\r\nimport * as authReducer from '../auth/Auth-Store/auth.reducers';\r\nimport { switchMap, take } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\n\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private store: Store<appReducer.AppState>) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        //request is immutable i.e., cannot be edited\r\n\r\n        // console.log('Intercepted', req);\r\n\r\n        // console.log(copiedReq);\r\n\r\n        return this.store.select('auth')\r\n          .pipe( take(1),\r\n            switchMap(\r\n                (authState: authReducer.State) => {\r\n\r\n                    const copiedReq = req.clone({ params: req.params.set('auth', authState.token) }); //copy of incoming request        \r\n                     \r\n                    return next.handle(copiedReq);\r\n                }\r\n            )\r\n        );\r\n\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { RecipeService } from \"../recipes/recipe.service\";\r\nimport { Recipe } from \"../recipes/recipe.model\";\r\n\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Ingredient } from \"./ingredient.model\";\r\nimport { AuthService } from \"../auth/auth.service\";\r\nimport { HttpClient, HttpParams, HttpHeaders, HttpRequest } from \"@angular/common/http\";\r\n\r\nimport { Store } from '@ngrx/store';\r\nimport * as ShoppingListReducers from '../shopping-list/ngRx-store/shopping-list.reducers';\r\nimport * as ShoppingListActions from '../shopping-list/ngRx-store/shopping-list.actions' ;\r\n\r\nimport * as AppReducers from '../AppStore/app.reducer'\r\n\r\n\r\n\r\n@Injectable()\r\n\r\nexport class DataStorageService {\r\n\r\n\r\n\r\n    constructor(private http: HttpClient, private recipeService: RecipeService,  private authService: AuthService, private store: Store<AppReducers.AppState>) {\r\n\r\n    }\r\n\r\n\r\n\r\n    storeRecipes() {\r\n\r\n       \r\n\r\n        /* ********************  OPTION 1\r\n       // const headers = new HttpHeaders().set('Authorization', token) // to pass the token as header ; not supported by firebase but might be useful for other backend\r\n\r\n        return this.http.put('https://ng-recipes-books.firebaseio.com/recipes.json', \r\n        this.recipeService.getRecipes(),{\r\n            observe: 'body',\r\n            params: new HttpParams().set('auth',tk),\r\n            //headers: headers\r\n        });\r\n\r\n        *************** */\r\n\r\n        /******* OPTION 2 ********* */\r\n\r\n        const req = new HttpRequest('PUT', 'https://ng-recipes-books.firebaseio.com/recipes.json', \r\n        this.recipeService.getRecipes(),{reportProgress: true   // report progress is useful when uploading or downloading\r\n           \r\n        })    \r\n\r\n       return  this.http.request(req)   // executing the request\r\n\r\n\r\n    }\r\n\r\n    storeList() {\r\n\r\n        let ingredients = [];\r\n\r\n     const IngredientList = this.store.select('shoppingList')\r\n     .subscribe(\r\n         data => {\r\n\r\n           // console.log( 'Saving Ingredient : ' ,data.ingredients);\r\n\r\n            ingredients = data.ingredients;\r\n\r\n\r\n         }\r\n     )\r\n\r\n     //console.log('before saving ',ingredients);\r\n        \r\n        return this.http.put('https://ng-recipes-books.firebaseio.com/shoppinglist.json' ,\r\n            ingredients);\r\n\r\n            \r\n    }\r\n\r\n    getRecipes() {\r\n\r\n\r\n\r\n      \r\n\r\n        this.http.get<Recipe[]>('https://ng-recipes-books.firebaseio.com/recipes.json' ,  // Option 1:  defining the type of data from get request\r\n\r\n            {\r\n                observe: 'body',\r\n                responseType: 'json'\r\n            }\r\n\r\n        )\r\n            .pipe(map(\r\n                (recipesData) => {  // httpclient will give the data automatically hence below line is not required\r\n                    //  const recipesData: Recipe[] = response.json();\r\n                    for (let recipe of recipesData) {\r\n                        if (!recipe['ingredients']) {  //make sure we have ingredient array if all the ingredients are removed from recipe\r\n                           // console.log(recipe);\r\n                            recipe['ingredients'] = [];\r\n                        }\r\n                    }\r\n\r\n                    return recipesData;\r\n                }\r\n            ))\r\n            .subscribe(\r\n                (recipes: Recipe[]) => {\r\n\r\n                    this.recipeService.setRecipes(recipes);\r\n                }\r\n            );\r\n\r\n        /* \r\n        \r\n        OPTION 2 => If the get response returns a text\r\n\r\n         this.http.get('https://ng-recipes-books.firebaseio.com/recipes.json?auth=' +tk, {\r\n\r\n                           observe: 'response',  // gives the entire response as json object\r\n                         //  observe: 'body'  // gives the response as text and not JS object\r\n                        \r\n                           responseType: 'text'\r\n                         //  responseType: 'blob'  // if getting a file\r\n                         //  responseType: 'arraybuffer'  // if buffer data\r\n                         //  responseType: 'json'  // most common\r\n                    })\r\n\r\n                   .pipe(map(\r\n\r\n                    (textData)={\r\n\r\n                        console.log (textData);\r\n                    }\r\n\r\n                   ))\r\n        \r\n        */\r\n\r\n\r\n    }\r\n\r\n    getShoppingList() {\r\n\r\n \r\n\r\n        this.http.get<Ingredient[]>('https://ng-recipes-books.firebaseio.com/shoppinglist.json' )\r\n            .pipe(map(\r\n                (listData) => {\r\n                    //const listData: Ingredient[] = response.json();\r\n\r\n                    return listData;\r\n                }\r\n            ))\r\n            .subscribe(\r\n                (list: Ingredient[]) => {\r\n\r\n                   this.store.dispatch(new ShoppingListActions.UpdateIngredients(list));\r\n                }\r\n            );\r\n\r\n    }\r\n\r\n}","\r\nimport { Directive, HostListener, HostBinding } from '@angular/core'\r\n\r\n@Directive({\r\n\r\n    selector: '[appDropDown]'\r\n})\r\n\r\nexport class DropDownDirective {\r\n\r\n   @HostBinding('class.open') isOpen = false;   //access bootstrap class Open\r\n\r\n    @HostListener('click') toggleOpen() {\r\n\r\n        this.isOpen = !this.isOpen;\r\n\r\n    }\r\n\r\n}","export class Ingredient {\r\n\r\n\r\nconstructor(public name: string , public amount: number)\r\n\r\n{\r\n\r\n\r\n}\r\n\r\n\r\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\n\r\n\r\nexport class LoggingInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(tap(   //handle request after sent or handle response\r\n            event => {\r\n               // console.log('Logging Interceptor: ', event);\r\n            }\r\n        ))\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { DropDownDirective } from \"./dropdown.directive\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n@NgModule({\r\n    declarations: [DropDownDirective], // directive should be declared atleast and only once\r\n    exports: [\r\n        CommonModule, // importing common module is not necessary\r\n        DropDownDirective\r\n    ]\r\n})\r\n\r\nexport class SharedModule{}","import { Action  }  from '@ngrx/store'\r\nimport { Ingredient } from '../../shared/ingredient.model';\r\n\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT' \r\n\r\nexport const ADD_INGREDIENTS = 'ADD_INGREDIENTS' \r\n\r\nexport const UPDATE_INGREDIENT = 'UPDATE_INGREDIENT' \r\n\r\nexport const DELETE_INGREDIENT = 'DELETE_INGREDIENT' \r\n\r\nexport const START_EDIT = 'START_EDIT'\r\n\r\nexport const STOP_EDIT = 'STOP_EDIT'\r\n\r\nexport const UPDATE_INGREDIENTS = 'UPDATE_INGREDIENTS'\r\n\r\nexport class AddIngredient implements Action {\r\n\r\n    //This action ets dispatched in the shopping-list-edit component\r\n\r\n    readonly type = ADD_INGREDIENT;\r\n\r\n    constructor(public payload: Ingredient) {\r\n   \r\n    }\r\n\r\n}\r\n\r\n\r\nexport class AddIngredients implements Action {\r\n\r\n    //This action ets dispatched in the shopping-list-edit component\r\n\r\n    readonly type = ADD_INGREDIENTS;\r\n\r\n    constructor(public payload: Ingredient[]) {\r\n   \r\n    }\r\n\r\n}\r\n\r\nexport class UpdateIngredients implements Action {\r\n\r\n    //This action ets dispatched in the shopping-list-edit component\r\n\r\n    readonly type = UPDATE_INGREDIENTS;\r\n\r\n    constructor(public payload: Ingredient[]) {\r\n   \r\n    }\r\n\r\n}\r\n\r\nexport class UpdateIngredient implements Action {\r\n\r\n    //This action ets dispatched in the shopping-list-edit component\r\n\r\n    readonly type = UPDATE_INGREDIENT;\r\n\r\n    constructor(public payload: {ingredient: Ingredient}) {\r\n   \r\n    }\r\n\r\n}\r\n\r\nexport class DeleteIngredient implements Action {\r\n\r\n    //This action ets dispatched in the shopping-list-edit component\r\n\r\n    readonly type = DELETE_INGREDIENT;\r\n\r\n\r\n\r\n}\r\n\r\nexport class StartEdit implements Action {\r\n\r\n    //This action ets dispatched in the shopping-list-edit component\r\n\r\n    readonly type = START_EDIT;\r\n\r\n    constructor(public payload: number) {\r\n   \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport class StopEdit implements Action {\r\n\r\n    //This action ets dispatched in the shopping-list-edit component\r\n\r\n    readonly type = STOP_EDIT;\r\n\r\n}\r\n\r\nexport type ShoppingListActions = AddIngredient | AddIngredients | UpdateIngredient | DeleteIngredient | StartEdit | StopEdit | UpdateIngredients;\r\n\r\n","\r\nimport { Ingredient } from '../../shared/ingredient.model';\r\n\r\nimport * as ShoppingListActions from './shopping-list.actions'\r\n\r\n\r\n\r\nexport interface State {\r\n\r\n    ingredients: Ingredient[];\r\n    editedIngredient: Ingredient;\r\n    editedIngredientIndex: number;\r\n\r\n}\r\n\r\n\r\nconst initialState: State = {   //defining initial state as there will be no initial state when application starts \r\n    ingredients: [\r\n        new Ingredient('Rice', 4),\r\n        new Ingredient('Black gram', 1)\r\n    ],\r\n\r\n    editedIngredient: null,\r\n\r\n    editedIngredientIndex: -1\r\n};\r\n\r\nexport function shoppingListReducer(state = initialState, action: ShoppingListActions.ShoppingListActions) {   //gets triggered when an action is dispatched ; state is the current state\r\n\r\n    //return the new state of the application coz, reducers updates the state ; NgRx will replace the existing with new one at the backend\r\n\r\n    switch (action.type) {  //could be multiple actions getting dispatched\r\n\r\n        /***** ADD INGREDIENT ********** */\r\n\r\n        case ShoppingListActions.ADD_INGREDIENT:  // state gets changed when an ingredient is added\r\n\r\n            return {\r\n                ...state,  //... is a spread operator that expands the old state  \r\n                ingredients: [...state.ingredients, action.payload]  // adding new element from action to the existing ; by default action has no payload property but only type ; to get the data, define a clearly types Actions\r\n\r\n            };\r\n\r\n        /***** ADD INGREDIENTS ********** */\r\n\r\n        case ShoppingListActions.ADD_INGREDIENTS:\r\n\r\n        \r\n\r\n            return {\r\n                ...state,\r\n                ingredients: [...state.ingredients, ...action.payload]\r\n            };\r\n\r\n        /***** UPDATE INGREDIENTS ********** */\r\n\r\n        case ShoppingListActions.UPDATE_INGREDIENTS:\r\n        let emptyIngredients = []\r\n        return {\r\n            ...state,\r\n            ingredients: [...emptyIngredients, ...action.payload]\r\n        };\r\n\r\n        /***** UPDATE INGREDIENT ********** */\r\n\r\n        case ShoppingListActions.UPDATE_INGREDIENT:\r\n            const ingredient = state.ingredients[state.editedIngredientIndex]  // get current ingredient i.e., before update\r\n\r\n            const updatedIngredient = {\r\n                ...ingredient,\r\n                ...action.payload.ingredient   // update the ingredient\r\n            }\r\n\r\n            const ingredients = [...state.ingredients];\r\n            ingredients[state.editedIngredientIndex] = updatedIngredient;\r\n\r\n            return {\r\n                ...state,\r\n                ingredients: ingredients,\r\n                editedIngredient: null,\r\n                editedIngredientIndex: -1\r\n\r\n            };\r\n\r\n        /***** DELETE INGREDIENT ********** */\r\n\r\n        case ShoppingListActions.DELETE_INGREDIENT:\r\n            const oldIngredients = [...state.ingredients];\r\n            oldIngredients.splice(state.editedIngredientIndex, 1);\r\n            return {\r\n                ...state,\r\n                ingredients: oldIngredients,\r\n                editedIngredient: null,\r\n                editedIngredientIndex: -1\r\n            };\r\n\r\n        /***** START EDIT ********** */\r\n\r\n        case ShoppingListActions.START_EDIT:\r\n            const editedIngredient = { ...state.ingredients[action.payload] }\r\n\r\n            return {\r\n                ...state,\r\n                editedIngredient: editedIngredient,\r\n                editedIngredientIndex: action.payload\r\n            }\r\n\r\n\r\n        /***** STOP EDIT ********** */\r\n\r\n        case ShoppingListActions.STOP_EDIT:\r\n\r\n            return {\r\n                ...state,\r\n                editedIngredient: null,\r\n                editedIngredientIndex: -1\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}     ","<h3>Shopping List</h3>\n<div class=\"row\">\n\n  <div class=\"col-xs-12\">\n\n    <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">  <!-- Access JS object created by Angular for the form element-->\n\n      <div class=\"row\">\n\n        <div class=\"col-sm-5 form-group\">\n\n          <label for=\"name\">Name</label>\n          <input type=\"text\" id=\"name\" class=\"form-control\" name=\"name\" ngModel required>\n\n        </div>\n\n        <div class=\"col-sm-2 form-group\">\n\n          <label for=\"amount\">Amount</label>\n          <input type=\"number\" id=\"amount\" class=\"form-control\" name=\"amount\" ngModel required pattern=\"^[1-9]+[0-9]*$\"> <!-- pattern expression allows only number > 0-->\n\n        </div>\n\n      </div>\n\n      <div class=\"row\">\n\n        <div class=\"col-xs-12\">\n\n          <button class=\"btn btn-success\" type=\"submit\" style=\"margin-left:5px\" [disabled]=\"!f.valid\">{{editMode ? 'Update' : 'Add'}}</button>\n          <button class=\"btn btn-danger\" type=\"button\" style=\"margin-left:5px\" (click)=\"onDelete()\"  *ngIf=\"editMode\">Delete</button>\n          <button class=\"btn btn-primary\" type=\"button\" style=\"margin-left:5px\" (click)=\"onClear()\">Clear</button>\n\n        </div>\n\n      </div>\n\n    </form>\n\n  </div>\n\n</div>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Ingredient } from '../../shared/ingredient.model';\n\n\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Store } from '@ngrx/store';\n\nimport * as ShoppingListActions from '../ngRx-store/shopping-list.actions' ;\nimport * as ShoppingListReducers from '../ngRx-store/shopping-list.reducers';\n\nimport * as AppReducers from '../../AppStore/app.reducer'\n\n@Component({\n  selector: 'app-shopping-list-edit',\n  templateUrl: './shopping-list-edit.component.html',\n  styleUrls: ['./shopping-list-edit.component.css']\n})\nexport class ShoppingListEditComponent implements OnInit, OnDestroy {\n\n  @ViewChild('f') slForm: NgForm;\n\n\n  subscription: Subscription;\n\n  editMode = false;\n\n    editedItem : Ingredient;\n\n  constructor(private store: Store<AppReducers.AppState>) { }\n\n  ngOnInit() {\n\n   this.subscription =  this.store.select('shoppingList')\n    .subscribe(\n      data => {\n        if(data.editedIngredientIndex > -1 ) {\n          this.editedItem = data.editedIngredient;\n          this.editMode = true;\n          this.slForm.setValue({\n            name: this.editedItem.name,\n            amount: this.editedItem.amount\n          })\n        } else {\n          this.editMode = false;\n        }\n      }\n    ) ;\n\n\n  }\n\n  onSubmit(form: NgForm) {\n\n    const value = form.value;\n\n    const newIngredient = new Ingredient(value.name, value.amount);\n\n    if(this.editMode){\n         //   this.slService.updateIngredient(this.editedItemIndex, newIngredient );\n\n            this.store.dispatch(new ShoppingListActions.UpdateIngredient({ingredient: newIngredient}));\n\n    }else {\n \n    //this.slService.addIngredient(newIngredient);\n\n\n    this.store.dispatch(new ShoppingListActions.AddIngredient(newIngredient));\n\n    }\n  this.editMode = false;\n    form.reset();\n\n  }\n\n  onClear(){\n\n    this.slForm.reset();\n    this.editMode = false;\n\n  }\n\n  onDelete(){\n  \n\n    this.store.dispatch(new ShoppingListActions.DeleteIngredient())\n\n  }\n\n  ngOnDestroy(): void {\n    this.store.dispatch(new ShoppingListActions.StopEdit());\n    this.subscription.unsubscribe();\n\n  }\n\n \n\n}\n","<div class=\"row\">\n\n<div class=\"col-xs-10\">\n\n  <app-shopping-list-edit></app-shopping-list-edit>\n\n  <hr>\n\n  <ul class=\"list-group\">\n\n    <!-- Listing all Ingredients -->\n\n    <a class=\"list-group-item\" style=\"cursor:pointer\"\n    \n    *ngFor=\"let ingredient of (shoppingListState | async).ingredients ; let i = index\"  (click) = \"onEditItem(i)\">\n \n    {{ ingredient.name }}  ( {{ ingredient.amount }})\n  </a>\n    \n    \n\n  </ul>\n\n</div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Ingredient } from '../shared/ingredient.model' ;\nimport { Subscription, Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { map } from 'rxjs/operators';\n\nimport * as ShoppingListActions from './ngRx-store/shopping-list.actions' ;\n\nimport * as AppReducers from '../AppStore/app.reducer'\n\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css']\n})\nexport class ShoppingListComponent implements OnInit { \n\n   shoppingListState : Observable<{ingredients: Ingredient[]}>\n\n  private subscription: Subscription\n\n  constructor( private store: Store<AppReducers.AppState>) { }\n\n  ngOnInit() {\n\n\n    this.shoppingListState = this.store.select('shoppingList')\n\n   }\n\n  \n  onEditItem(index: number){\n\n    this.store.dispatch(new ShoppingListActions.StartEdit(index));\n\n  }\n  \n}\n","import { NgModule } from \"@angular/core\";\r\nimport { ShoppingListComponent } from \"./shopping-list.component\";\r\nimport { ShoppingListEditComponent } from \"./shopping-list-edit/shopping-list-edit.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ShoppingListComponent,\r\n        ShoppingListEditComponent\r\n\r\n    ],\r\n\r\n    imports:[\r\n        CommonModule,\r\n        FormsModule\r\n\r\n    ]\r\n})\r\n\r\nexport class ShoppingListModule{}","export { AppServerModule } from './app/app.server.module';","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/forms\");","module.exports = require(\"@angular/http\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@angular/router\");","module.exports = require(\"@ngrx/store\");","module.exports = require(\"@nguniversal/module-map-ngfactory-loader\");","module.exports = require(\"firebase\");","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/operators\");"],"sourceRoot":""}